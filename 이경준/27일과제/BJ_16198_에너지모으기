import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.StringTokenizer;
//28592	240
public class Main_BJ_16198_에너지모으기 {
	static List<Integer> l;
	static int N;
	static int max = Integer.MIN_VALUE;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		N = Integer.parseInt(br.readLine());
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		l = new LinkedList<>();
		
		for(int i=0;i<N;i++) {
			l.add(Integer.parseInt(st.nextToken()));
		}
		

		select(0, new int [N-2], new boolean[N-2]);

		System.out.println(max);
	}
	private static void select(int cnt, int[] idx, boolean[] visit) {
		if(cnt == N-2) {
//			System.out.println(Arrays.toString(idx));
			getans(idx);
			return;
		}
		
		for(int i=1;i<N-1;i++) {
			if(visit[i-1]) continue;
			
			visit[i-1]=true;
			idx[cnt] = i;
			select(cnt+1, idx, visit);
			visit[i-1]=false;
		}
		
	}
	private static void getans(int[] idx) {
		List<Integer> tmp= new LinkedList<>();
		for(int i=0;i<l.size();i++) {
			tmp.add(l.get(i));
			
		}
		int ans=0;
		int i=0;
		while(tmp.size()>2) {
			int deletenum = idx[i];
//			System.out.println(deletenum);
//			System.out.println(tmp.toString());
			ans += tmp.get(deletenum-1)*tmp.get(deletenum+1);
			tmp.remove(deletenum);
			
			for(int j=i;j<idx.length;j++) {
				if(idx[j]>deletenum)idx[j]--;
			}
			i++;
		}
		max = Math.max(max, ans);
		
	}

}
